!function(){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}$((function(){var t=$("#session-time"),n=$("#session-count"),i=$("#session-secret");$("select#session-context").on({change:function(){switch($(this).val()){case"payload":i.removeClass("hidden"),n.addClass("hidden"),t.addClass("hidden");break;case"session":case"database":i.addClass("hidden"),n.removeClass("hidden"),t.removeClass("hidden")}}}),$("input[name='purge-toggle']").parents(".lightswitch").on({change:function(){$("input",this).val()||$("select#purge-value").val(0)}}),$("select#spam-protection-behavior").on({change:function(){var e=$("#custom-spam-error-message");"display_errors"===$(this).val()?e.show("fast"):e.hide("fast")}});var a=$('select[name="settings[scriptInsertLocation]"]'),s=$("#script-insert-warning").text();a.on({change:function(){var e=$(this).val(),t=$(this).parents(".field:first");if("manual"===e){var n=document.createElement("div");n.classList.add("warning","with-icon"),n.innerText=s,t.append(n)}else t.find(".warning.with-icon").remove()}}),a.trigger("change");var o=$('select[name="settings[loggingLevel]"]'),r=$("#logging-level-warning").text();o.on({change:function(){var e=$(this).val(),t=$(this).parents(".field:first");if("info"===e||"debug"===e){var n=document.createElement("div");n.classList.add("warning","with-icon"),n.innerText=r,t.append(n)}else t.find(".warning.with-icon").remove()}}),o.trigger("change");var c=$("#files-directory"),l=$("#template-default");$("#storage-type").on({change:function(e){var t=e.target.value;["files","files_database"].includes(t)?c.removeClass("hidden"):c.addClass("hidden"),"files_database"===t?l.removeClass("hidden"):l.addClass("hidden")}});var d=$("#notifications-migrator");d&&$("#migrate",d).on({click:function(t){if(!confirm("Are you sure you want to migrate database notifications to file based ones?"))return t.preventDefault(),t.stopPropagation(),!1;var n,i,a,s=$("#remove-files",d).is(":checked");return $.ajax({url:Craft.getCpUrl("freeform/migrate/notifications/db-to-file"),type:"post",dataType:"json",contentType:"application/json",data:JSON.stringify((n={removeDbNotifications:s},i=Craft.csrfTokenName,a=Craft.csrfTokenValue,(i=function(t){var n=function(t){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var i=n.call(t,"string");if("object"!=e(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}(i))in n?Object.defineProperty(n,i,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[i]=a,n)),success:function(e){e.success&&d.html($('<div class="pane">\n                  <p>\n                    <span class="checkmark-icon"></span>\n                    Migrated successfully\n                  </p>\n                </div>\n                '))}}),t.preventDefault(),t.stopPropagation(),!1}}),$(".lock-button").on("click",(function(){var e=$("input",this);e.val("1"===e.val()?"0":"1"),e.toggleClass("locked","1"===e.val())}))}))}();